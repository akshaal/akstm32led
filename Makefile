# GNU GPL blah blah blah (C) Akshaal, 2017 blah blah blah

TARGET			= akstm32le
PREFIX			= arm-none-eabi
MCPU			= cortex-m3
CUBEFILE_REL	= misc/stm32cubef1.zip # File downloaded from st.com site

SRCS		= main.c

# Compiler flags
CFLAGS  = -Wall # All warnings
CFLAGS += -save-temps=obj # Save temporary files (assembler etc) based on obj file location
CFLAGS += -g # Enable debug symbols in elf file
CFLAGS += -std=gnu11 # Use GNU C 2011
CFLAGS += -O4 # Optimize for speed
CFLAGS += -mcpu=${MCPU}
CFLAGS += -mthumb # Generate either Thumb-1 (16bit) or Thumb-2 (32bit) instructions
CFLAGS += -funroll-loops # Unroll loops
CFLAGS += -fno-strict-aliasing # Makes more optimization possible
CFLAGS += -ffreestanding # Assert that compilation targets a freestanding environment.
CFLAGS += -flto # Enable link time optimization
CFLAGS += -fwhole-program # Enable whole program optimization
CFLAGS += -ffunction-sections # Place each function into its own section
CFLAGS += -fdata-sections # Place data into its own section
CFLAGS += -fshort-enums # Allocate to an enum type only as many bytes as it needs for the declared range of possible values.

# Linked flags
LDFLAGS  = -Wl,--gc-sections # Remove unused sections (e.g. remove unused data and functions)
LDFLAGS += -Wl,--relax # Perform optimizations in linker
LDFLAGS += -Wl,-Map=tmp/$(TARGET).map # Write map file
LDFLAGS += -lc # Use standard C file

# Applications
AR			= $(PREFIX)-ar
CC			= $(PREFIX)-gcc
GDB		= $(PREFIX)-gdbd
OBJCOPY	= $(PREFIX)-objcopy
OBJDUMP	= $(PREFIX)-objdump
SIZE		= $(PREFIX)-size

# Generate list of object files (.o) and dependency files (.d)
# Dependency files are the one that are generated by GCC by using MMD MF options
OBJS		= $(addprefix tmp/,$(SRCS:.c=.o))
DEPS		= $(addprefix tmp/,$(SRCS:.c=.d))

###################################################################################################

# Some useful info about makefile syntax:
#    targets : normal-prerequisites | order-only-prerequisites

###################################################################################################

# First rule is the default one
all: bin/$(TARGET).bin

# Include dependncy files (generated by GCC)
-include $(DEPS)

bin/$(TARGET).bin: $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) $^ -o tmp/$(TARGET).elf
	$(OBJDUMP) -St tmp/$(TARGET).elf >tmp/$(TARGET).lst
	$(SIZE) tmp/$(TARGET).elf
	$(OBJCOPY) -O binary tmp/$(TARGET).elf bin/$(TARGET).bin

tmp/%.o : src/%.c | dirs
	$(CC) $(CFLAGS) -c -o $@ $< -MMD -MF tmp/$(*F).d

.PHONY: all clean dirs

dirs: cube

cube: | ${CUBEFILE_REL}
	cd tmp && unzip ../${CUBEFILE_REL}
	mv tmp/STM32Cube* cube
	chmod 755 cube

clean:
	rm -f tmp/*.o tmp/*.map tmp/*.elf tmp/*.lst bin/*.bin tmp/*.d tmp/*.map tmp/*.i tmp/*.s tmp/*.res tmp/*.zip
	rm -rf tmp/STM32*
	rm -rf cube
