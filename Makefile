TARGET		= akstm32le
PREFIX		= arm-none-eabi
MCPU		= cortex-m3

SRCS		= main.c

# Compiler flags
CFLAGS  = -Wall # All warnings
CFLAGS += -g # Enable debug symbols in elf file
CFLAGS += -std=gnu11 # Use GNU C 2011
CFLAGS += -Os # Optimize for speed
CFLAGS += -mcpu=${MCPU}
CFLAGS += -mthumb # Generate either Thumb-1 (16bit) or Thumb-2 (32bit) instructions
CFLAGS += -ffunction-sections
CFLAGS += -fdata-sections

# Linked flags
LDFLAGS  = -Wl,--gc-sections
LDFLAGS += -Wl,-Map=tmp/$(TARGET).map
LDFLAGS += -lc

# Applications
AR			= $(PREFIX)-ar
CC			= $(PREFIX)-gcc
GDB		= $(PREFIX)-gdbd
OBJCOPY	= $(PREFIX)-objcopy
OBJDUMP	= $(PREFIX)-objdump
SIZE		= $(PREFIX)-size

# Generate list of object files (.o) and dependency files (.d)
# Dependency files are the one that are generated by GCC by using MMD MF options
OBJS		= $(addprefix tmp/,$(SRCS:.c=.o))
DEPS		= $(addprefix tmp/,$(SRCS:.c=.d))

# First rule is the default one
all: bin/$(TARGET).bin

# Include dependncy files (generated by GCC)
-include $(DEPS)

bin/$(TARGET).bin: $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) $^ -o tmp/$(TARGET).elf
	$(OBJDUMP) -St tmp/$(TARGET).elf >tmp/$(TARGET).lst
	$(SIZE) tmp/$(TARGET).elf
	$(OBJCOPY) -O binary tmp/$(TARGET).elf bin/$(TARGET).bin

tmp/%.o : src/%.c
	$(CC) $(CFLAGS) -c -o $@ $< -MMD -MF tmp/$(*F).d

.PHONY: all clean

clean:
	rm -f tmp/*.o tmp/*.map tmp/*.elf tmp/*.lst bin/*.bin tmp/*.d
